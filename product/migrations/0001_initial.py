# Generated by Django 4.0 on 2022-11-03 07:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('category', models.CharField(choices=[('Meal', 'Meal'), ('Food', 'Food'), ('Bakery', 'Bakery'), ('Beverage', 'Beverage'), ('DairyProduct', 'DairyProduct'), ('Snack', 'Snack'), ('Icecream', 'Icecream'), ('Necessaries', 'Necessaries'), ('Etc', 'Etc')], max_length=12)),
                ('manufacturer', models.CharField(blank=True, max_length=128)),
                ('price', models.PositiveIntegerField()),
                ('description', models.TextField(default='')),
                ('image', models.URLField(default='http://43.200.205.125:8000/media/default_product.png')),
                ('likes', models.ManyToManyField(blank=True, related_name='like_products', to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(blank=True, related_name='view_products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.IntegerField()),
                ('business_name', models.CharField(max_length=128)),
                ('branch_name', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=255)),
                ('postcode', models.IntegerField(null=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='product.company')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counts', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='product.store')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('1+1', '1+1'), ('2+1', '2+1'), ('3+1', '2+1'), ('DC', 'Discount'), ('DUM', 'Dummy')], max_length=3)),
                ('description', models.TextField(default='')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='product.product')),
            ],
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.UniqueConstraint(fields=('product', 'store'), name='stock_id'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.UniqueConstraint(fields=('product', 'company'), name='event_id'),
        ),
    ]
